{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAeA,IAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAuBH,EAAKE,cAAc,yBAEhDF,EAAKI,iBAAiB,UAAU,SAAAC,G,kBAY5B,IA5BmBC,EAAUC,EA6BvBC,GA7BaF,EA6BWG,EA7BDF,EA4BRG,EAAaC,GAAaF,EAAI,GA3B9C,IAAIG,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEP,WAAUC,UAEpBO,EAAO,CAAER,WAAUC,S,GAEpBA,E,KAqBHC,EACGW,MAAK,SAAAC,G,IAAGd,EAAQc,EAARd,SAAUC,EAAKa,EAALb,MACjBc,EAAAvB,GAASwB,OAAOC,QACd,uBAAwCC,OAAflB,EAAS,QAAYkB,OAANjB,EAAM,M,IAGjDkB,OAAM,SAAAL,G,IAAGd,EAAQc,EAARd,SAAUC,EAAKa,EAALb,MAClBc,EAAAvB,GAASwB,OAAOI,QACd,sBAAqCF,OAAflB,EAAS,QAAYkB,OAANjB,EAAM,M,IAG9CoB,SAAQ,WACHlB,IAAMmB,IACRzB,EAAqB0B,UAAW,E,IAItCC,EAASC,KAAKvB,E,EA9BhBH,EAAE2B,iBAEF7B,EAAqB0B,UAAW,EAQhC,IANA,IAAMnB,GAAcL,EAAE4B,OAAOC,SAAS3B,MAAM4B,MACtCxB,GAAaN,EAAE4B,OAAOC,SAASE,KAAKD,MACpCP,GAAevB,EAAE4B,OAAOC,SAASG,OAAOF,MAExCL,EAAW,GAERQ,EAAI,EAAGA,GAAKV,EAAaU,IAAGC,EAAAD,GAuBrC1B,QAAQ4B,IAAIV,GACTH,SAAQ,WACPxB,EAAqB0B,UAAW,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('.form');\nconst createPromisesButton = form.querySelector('button[type=\"submit\"]');\n\nform.addEventListener('submit', e => {\n  e.preventDefault(); \n\n  createPromisesButton.disabled = true; \n\n  const delayInput = +e.target.elements.delay.value;\n  const stepInput = +e.target.elements.step.value;\n  const amountInput = +e.target.elements.amount.value;\n\n  const promises = [];\n\n  for (let i = 1; i <= amountInput; i++) {\n    const currentDelay = delayInput + stepInput * (i - 1);\n    const promise = createPromise(i, currentDelay);\n    promise\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      })\n      .finally(() => {\n        if (i === amountInput) {\n          createPromisesButton.disabled = false;\n        }\n      });\n\n    promises.push(promise);\n  }\n\n  Promise.all(promises)\n    .finally(() => {\n      createPromisesButton.disabled = false;\n    });\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromisesButton","addEventListener","e","position","delay","promise","i","delayInput","stepInput","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","finally","amountInput","disabled","promises","push","preventDefault","target","elements","value","step","amount","i1","_loop","all"],"version":3,"file":"03-promises.5e287c3f.js.map"}