{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAiBC,SAASC,eAAe,mBACzCC,EAAcF,SAASG,cAAc,sBACrCC,EAAc,CAChBC,KAAML,SAASG,cAAc,eAC7BG,MAAON,SAASG,cAAc,gBAC9BI,QAASP,SAASG,cAAc,kBAChCK,QAASR,SAASG,cAAc,mBAGpCD,EAAYO,UAAW,EAEvB,IAmBIC,EAnBEC,EAAU,CACZC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIC,KACjBC,gBAAiB,EACjBC,QAAA,SAAQC,GACiBA,EAAc,IACfH,KAAKI,OACrBC,EAAAvB,GAASwB,OAAOC,QAAQ,sCACxBvB,EAAewB,MAAQ,GACvBrB,EAAYO,UAAW,GAEvBP,EAAYO,UAAW,C,GAmDnC,SAASe,EAAeD,GACpB,OAAOA,EAAME,WAAWC,SAAS,EAAG,I,CAGxC,SAASC,EAAmBtB,EAAMC,EAAOC,EAASC,GAC9CJ,EAAYC,KAAKuB,YAAcJ,EAAenB,GAC9CD,EAAYE,MAAMsB,YAAcJ,EAAelB,GAC/CF,EAAYG,QAAQqB,YAAcJ,EAAejB,GACjDH,EAAYI,QAAQoB,YAAcJ,EAAehB,E,CAtDrDqB,UAAU9B,EAAgBY,GAI1BT,EAAY4B,iBAAiB,SAAS,WAClC,IAAMC,EAAe,IAAIhB,KAAKhB,EAAewB,OACvCS,EAAcjB,KAAKI,MACrBY,GAAgBC,EAChBZ,EAAAvB,GAASwB,OAAOC,QAAQ,sCAExBZ,EAAoBuB,aAAY,YAMxC,SAAqBC,GACjB,IAAMf,EAAMJ,KAAKI,MACXgB,EAAgBD,EAAUf,EAIhC,GAHAjB,EAAYkC,MAAMC,QAAU,OAC5BtC,EAAeqC,MAAMC,QAAU,OAE3BF,GAAiB,EAGjB,OAFAG,cAAc5B,QACdiB,EAAmB,EAAG,EAAG,EAAG,GAIhC,IAA0CY,EAI9C,SAAmBC,GACf,IAAMC,EAAS,IACTC,EAAkB,GAATD,EACTE,EAAgB,GAATD,EACPE,EAAa,GAAPD,EAENtC,EAAOwC,KAAKC,MAAMN,EAAKI,GACvBtC,EAAQuC,KAAKC,MAAMN,EAAMI,EAAOD,GAChCpC,EAAUsC,KAAKC,MAAMN,EAAOI,EAAOD,EAAQD,GAC3ClC,EAAUqC,KAAKC,MAAMN,EAAQI,EAAOD,EAAQD,EAAUD,GAE5D,MAAO,CAAEpC,OAAMC,QAAOC,UAASC,U,CAfWuC,CAAUZ,GAA5C9B,EAAkCkC,EAAlClC,KAAMC,EAA4BiC,EAA5BjC,MAAOC,EAAqBgC,EAArBhC,QAASC,EAAY+B,EAAZ/B,QAC9BmB,EAAmBtB,EAAMC,EAAOC,EAASC,E,CAlBnCwC,CAAYjB,E,GACX,I","sources":["src/js/02-timer.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst dateTimePicker = document.getElementById('datetime-picker');\nconst startButton = document.querySelector('button[data-start]');\nconst timerFields = {\n    days: document.querySelector('[data-days]'),\n    hours: document.querySelector('[data-hours]'),\n    minutes: document.querySelector('[data-minutes]'),\n    seconds: document.querySelector('[data-seconds]'),\n};\n\nstartButton.disabled = true;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        const selectedDate = selectedDates[0];\n        if (selectedDate <= Date.now()) {\n            Notiflix.Notify.failure('Please choose a date in the future');\n            dateTimePicker.value = '';\n            startButton.disabled = true;\n        } else {\n            startButton.disabled = false;\n        }\n    },\n};\n\nflatpickr(dateTimePicker, options);\n\nlet countdownInterval;\n\nstartButton.addEventListener('click', () => {\n    const selectedDate = new Date(dateTimePicker.value);\n    const currentTime = Date.now();\n    if (selectedDate <= currentTime) {\n        Notiflix.Notify.failure('Please choose a date in the future');\n    } else {\n        countdownInterval = setInterval(() => {\n          updateTimer(selectedDate);\n        }, 1000);\n    }\n});\n\nfunction updateTimer(endTime) {\n    const now = Date.now();\n    const timeRemaining = endTime - now;\n    startButton.style.display = 'none'; \n    dateTimePicker.style.display = 'none'; \n    \n    if (timeRemaining <= 0) {\n        clearInterval(countdownInterval);\n        updateTimerDisplay(0, 0, 0, 0);\n        return;\n    } \n\n    const { days, hours, minutes, seconds } = convertMs(timeRemaining);\n    updateTimerDisplay(days, hours, minutes, seconds);\n}\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n    return value.toString().padStart(2, '0');\n}\n\nfunction updateTimerDisplay(days, hours, minutes, seconds) {\n    timerFields.days.textContent = addLeadingZero(days);\n    timerFields.hours.textContent = addLeadingZero(hours);\n    timerFields.minutes.textContent = addLeadingZero(minutes);\n    timerFields.seconds.textContent = addLeadingZero(seconds);\n}\n"],"names":["$6JpON","parcelRequire","$84b9dae4df53835d$var$dateTimePicker","document","getElementById","$84b9dae4df53835d$var$startButton","querySelector","$84b9dae4df53835d$var$timerFields","days","hours","minutes","seconds","disabled","$84b9dae4df53835d$var$countdownInterval","$84b9dae4df53835d$var$options","enableTime","time_24hr","defaultDate","Date","minuteIncrement","onClose","selectedDates","now","$parcel$interopDefault","Notify","failure","value","$84b9dae4df53835d$var$addLeadingZero","toString","padStart","$84b9dae4df53835d$var$updateTimerDisplay","textContent","flatpickr","addEventListener","selectedDate","currentTime","setInterval","endTime","timeRemaining","style","display","clearInterval","ref","ms","second","minute","hour","day","Math","floor","$84b9dae4df53835d$var$convertMs","$84b9dae4df53835d$var$updateTimer"],"version":3,"file":"02-timer.4ac4f87e.js.map"}