{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIb,MAAMQ,EAAOC,SAASC,cAAc,SAC9BC,EAAuBH,EAAKE,cAAc,yBAEhDF,EAAKI,iBAAiB,UAAUC,IAC9BA,EAAEC,iBAEFH,EAAqBI,UAAW,EAEhC,MAAMC,GAAcH,EAAEI,OAAOC,SAASlB,MAAMmB,MACtCC,GAAaP,EAAEI,OAAOC,SAASG,KAAKF,MACpCG,GAAeT,EAAEI,OAAOC,SAASK,OAAOJ,MAExCK,EAAW,GAEjB,IAAK,IAAIC,EAAI,EAAGA,GAAKH,EAAaG,IAAK,CACrC,MACMC,EAAU5B,EAAc2B,EADTT,EAAaI,GAAaK,EAAI,IAEnDC,EACGC,MAAK,EAAC5B,SAAEA,EAAQC,MAAEA,MACjB4B,EAAAhC,GAASiC,OAAOC,QACd,uBAAqB/B,QAAiBC,MAAU,IAGnD+B,OAAM,EAAChC,SAAEA,EAAQC,MAAEA,MAClB4B,EAAAhC,GAASiC,OAAOG,QACd,sBAAoBjC,QAAeC,MAAU,IAGhDiC,SAAQ,KACHR,IAAMH,IACRX,EAAqBI,UAAW,EAAK,IAI3CS,EAASU,KAAKR,E,CAGhBzB,QAAQkC,IAAIX,GACTS,SAAQ,KACPtB,EAAqBI,UAAW,CAAK,GACrC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('.form');\nconst createPromisesButton = form.querySelector('button[type=\"submit\"]');\n\nform.addEventListener('submit', e => {\n  e.preventDefault(); \n\n  createPromisesButton.disabled = true; \n\n  const delayInput = +e.target.elements.delay.value;\n  const stepInput = +e.target.elements.step.value;\n  const amountInput = +e.target.elements.amount.value;\n\n  const promises = [];\n\n  for (let i = 1; i <= amountInput; i++) {\n    const currentDelay = delayInput + stepInput * (i - 1);\n    const promise = createPromise(i, currentDelay);\n    promise\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      })\n      .finally(() => {\n        if (i === amountInput) {\n          createPromisesButton.disabled = false;\n        }\n      });\n\n    promises.push(promise);\n  }\n\n  Promise.all(promises)\n    .finally(() => {\n      createPromisesButton.disabled = false;\n    });\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromisesButton","addEventListener","e","preventDefault","disabled","delayInput","target","elements","value","stepInput","step","amountInput","amount","promises","i","promise","then","$parcel$interopDefault","Notify","success","catch","failure","finally","push","all"],"version":3,"file":"03-promises.0ad93621.js.map"}